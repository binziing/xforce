/*
 * This file is generated by jOOQ.
 */
package com.binziing.task.jooq.tables;


import com.binziing.task.jooq.Indexes;
import com.binziing.task.jooq.Keys;
import com.binziing.task.jooq.Xforce;
import com.binziing.task.jooq.tables.records.TAdminRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TAdmin extends TableImpl<TAdminRecord> {

    private static final long serialVersionUID = -2146083190;

    /**
     * The reference instance of <code>xforce.t_admin</code>
     */
    public static final TAdmin T_ADMIN = new TAdmin();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TAdminRecord> getRecordType() {
        return TAdminRecord.class;
    }

    /**
     * The column <code>xforce.t_admin.id</code>. 主键id
     */
    public final TableField<TAdminRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "主键id");

    /**
     * The column <code>xforce.t_admin.username</code>. 用户名
     */
    public final TableField<TAdminRecord, String> USERNAME = createField("username", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "用户名");

    /**
     * The column <code>xforce.t_admin.password</code>. 用户密码
     */
    public final TableField<TAdminRecord, String> PASSWORD = createField("password", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "用户密码");

    /**
     * The column <code>xforce.t_admin.email</code>. 用户邮箱
     */
    public final TableField<TAdminRecord, String> EMAIL = createField("email", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "用户邮箱");

    /**
     * Create a <code>xforce.t_admin</code> table reference
     */
    public TAdmin() {
        this(DSL.name("t_admin"), null);
    }

    /**
     * Create an aliased <code>xforce.t_admin</code> table reference
     */
    public TAdmin(String alias) {
        this(DSL.name(alias), T_ADMIN);
    }

    /**
     * Create an aliased <code>xforce.t_admin</code> table reference
     */
    public TAdmin(Name alias) {
        this(alias, T_ADMIN);
    }

    private TAdmin(Name alias, Table<TAdminRecord> aliased) {
        this(alias, aliased, null);
    }

    private TAdmin(Name alias, Table<TAdminRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> TAdmin(Table<O> child, ForeignKey<O, TAdminRecord> key) {
        super(child, key, T_ADMIN);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Xforce.XFORCE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_ADMIN_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TAdminRecord, Integer> getIdentity() {
        return Keys.IDENTITY_T_ADMIN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TAdminRecord> getPrimaryKey() {
        return Keys.KEY_T_ADMIN_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TAdminRecord>> getKeys() {
        return Arrays.<UniqueKey<TAdminRecord>>asList(Keys.KEY_T_ADMIN_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TAdmin as(String alias) {
        return new TAdmin(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TAdmin as(Name alias) {
        return new TAdmin(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TAdmin rename(String name) {
        return new TAdmin(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TAdmin rename(Name name) {
        return new TAdmin(name, null);
    }
}
